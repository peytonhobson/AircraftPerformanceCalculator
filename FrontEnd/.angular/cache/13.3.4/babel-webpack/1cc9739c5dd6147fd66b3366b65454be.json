{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '@app/services/account.service';\nimport { AlertService } from '@app/services/alert.service';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/services/account.service\";\nimport * as i4 from \"@app/services/alert.service\";\nimport * as i5 from \"../../../navigation/layouts/layout-auth/layout-auth.component\";\nimport * as i6 from \"@angular/common\";\n\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"username\"].errors[\"required\"]);\n  }\n}\n\nfunction LoginComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, LoginComponent_div_19_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors[\"required\"]);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n      localStorage.removeItem('username');\n      localStorage.removeItem('token');\n      console.log(localStorage.getItem('username'));\n      this.alertService.clear(); // get return url from route parameters or default to '/'\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.form.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.accountService.login(this.f['username'].value, this.f['password'].value).pipe(first()).subscribe(data => {\n        this.alertService.success('Login successful', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate([this.returnUrl]);\n      }, error => {\n        this.alertService.error(\"Username and Password combination does not exist.\");\n        this.loading = false;\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.AlertService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"login\"]],\n    decls: 27,\n    vars: 11,\n    consts: [[1, \"container\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"col-lg-5\"], [1, \"card\", \"border-0\", \"mt-5\"], [1, \"card-header\", \"bg-dark\"], [1, \"text-center\", \"font-weight-light\", \"my-4\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", 3, \"formGroup\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Enter username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\", \"mt-4\", \"mb-0\"], [1, \"btn\", \"btn-outline-dark\", 2, \"float\", \"right\"], [1, \"card-footer\", \"bg-dark\", \"text-center\"], [1, \"small\"], [\"routerLink\", \"/auth/register\", \"id\", \"BottomLink\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"layout-auth\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h2\", 5);\n        i0.ɵɵtext(7, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 12);\n        i0.ɵɵtext(17, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 13);\n        i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 14)(21, \"button\", 15);\n        i0.ɵɵtext(22, \"Login\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 16)(24, \"div\", 17)(25, \"a\", 18);\n        i0.ɵɵtext(26, \"Register\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n      }\n    },\n    directives: [i5.LayoutAuthComponent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgClass, i6.NgIf, i2.RouterLinkWithHref],\n    styles: [\".card-header[_ngcontent-%COMP%], .card-footer[_ngcontent-%COMP%], #BottomLink[_ngcontent-%COMP%]{color:#ffffff80}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}