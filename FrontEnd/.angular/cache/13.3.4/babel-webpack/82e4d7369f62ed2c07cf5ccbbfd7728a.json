{"ast":null,"code":"import { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertService } from '@services/alert.service';\nimport { User } from '@app/models/user';\nimport { AuthenticationCode } from '@app/models/authentication.code.model';\nimport { AuthenticationService } from '@app/services/auth.service';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@services/alert.service\";\nimport * as i4 from \"@app/services/auth.service\";\nimport * as i5 from \"../../../navigation/layouts/layout-auth/layout-auth.component\";\nimport * as i6 from \"@angular/common\";\n\nfunction RegisterComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"username\"].errors[\"required\"]);\n  }\n}\n\nfunction RegisterComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, RegisterComponent_div_19_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors[\"minlength\"]);\n  }\n}\n\nfunction RegisterComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_24_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_24_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, RegisterComponent_div_24_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"confirmPassword\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"confirmPassword\"].errors[\"minlength\"]);\n  }\n}\n\nfunction RegisterComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Authentication Code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_29_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_29_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, RegisterComponent_div_29_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"authenticationCode\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"confirmPassword\"].errors[\"minlength\"]);\n  }\n}\n\nfunction RegisterComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(formBuilder, route, router, alertService, authService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.alertService = alertService;\n      this.authService = authService;\n      this.loading = false;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(8)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(8)]],\n        authenticationCode: ['', Validators.required]\n      });\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.form.invalid) {\n        return;\n      } // If passwords don't match throw alert\n\n\n      if (this.f['password'].value !== this.f['confirmPassword'].value) {\n        this.alertService.error(\"Passwords do not match.\");\n        return;\n      }\n\n      var user = new User(this.form.get('username').value, this.form.get('password').value, \"ROLE_USER\");\n      var authenticationCode = new AuthenticationCode(this.form.get('authenticationCode').value);\n      this.loading = true;\n      this.authService.authenticate(authenticationCode, user).pipe(first()).subscribe(data => {\n        try {\n          if (data.data.authentication !== undefined) {\n            this.alertService.success('Registration successful', {\n              keepAfterRouteChange: true\n            });\n            this.router.navigate(['../login'], {\n              relativeTo: this.route\n            });\n          }\n        } catch (_a) {\n          console.log(\"Not Authenticated\");\n        } finally {\n          this.loading = false;\n\n          for (var name in this.form.controls) {\n            this.form.controls[name].setValue('');\n            this.form.controls[name].setErrors(null);\n          }\n        }\n      }, error => {\n        this.loading = false;\n      });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i4.AuthenticationService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"register\"]],\n    decls: 40,\n    vars: 19,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-5\"], [1, \"card\", \"shadow-lg\", \"border-0\", \"rounded-lg\", \"mt-5\"], [1, \"card-header\", \"bg-dark\"], [1, \"text-center\", \"font-weight-light\", \"my-4\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\", \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"authenticationCode\"], [\"type\", \"text\", \"formControlName\", \"authenticationCode\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-row\"], [1, \"btn\", \"btn-large\", \"btn-outline-dark\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../login\", 1, \"btn\", \"btn-link\", \"text-dark\"], [1, \"card-footer\", \"bg-dark\", \"text-center\"], [1, \"small\"], [\"routerLink\", \"/auth/login\", \"id\", \"BottomLink\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"layout-auth\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h2\", 5);\n        i0.ɵɵtext(7, \"Create Account\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 12);\n        i0.ɵɵtext(17, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 13);\n        i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 3, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 8)(21, \"label\", 14);\n        i0.ɵɵtext(22, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 15);\n        i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 3, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 8)(26, \"label\", 16);\n        i0.ɵɵtext(27, \"Authentication Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 17);\n        i0.ɵɵtemplate(29, RegisterComponent_div_29_Template, 3, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 18)(31, \"button\", 19);\n        i0.ɵɵtemplate(32, RegisterComponent_span_32_Template, 1, 0, \"span\", 20);\n        i0.ɵɵtext(33, \" Register \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"a\", 21);\n        i0.ɵɵtext(35, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"div\", 22)(37, \"div\", 23)(38, \"a\", 24);\n        i0.ɵɵtext(39, \"Have an account? Go to login\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f[\"confirmPassword\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"confirmPassword\"].errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f[\"authenticationCode\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"authenticationCode\"].errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i5.LayoutAuthComponent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgClass, i6.NgIf, i2.RouterLinkWithHref],\n    styles: [\".card-header[_ngcontent-%COMP%], .card-footer[_ngcontent-%COMP%], #BottomLink[_ngcontent-%COMP%]{color:#ffffff80}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}