{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { AccountService } from '@services/account.service';\nimport { ApiService } from '@services/api.service';\nimport { AuthenticationService } from '@services/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@services/account.service\";\nimport * as i3 from \"@services/auth.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@services/api.service\";\nexport let AdminGuard = /*#__PURE__*/(() => {\n  class AdminGuard {\n    constructor(router, accountService, authenticationService, http, apiService) {\n      this.router = router;\n      this.accountService = accountService;\n      this.authenticationService = authenticationService;\n      this.http = http;\n      this.apiService = apiService;\n    }\n\n    canActivate(route, state) {\n      if (localStorage.getItem('token')) {\n        const decode = jwtDecode(localStorage.getItem('token'));\n\n        if (decode['roles'][0] === \"ROLE_ADMIN\") {\n          return true;\n        }\n      }\n\n      this.router.navigate(['/dashboard'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n\n  }\n\n  AdminGuard.ɵfac = function AdminGuard_Factory(t) {\n    return new (t || AdminGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AccountService), i0.ɵɵinject(i3.AuthenticationService), i0.ɵɵinject(i4.HttpClient), i0.ɵɵinject(i5.ApiService));\n  };\n\n  AdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminGuard,\n    factory: AdminGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AdminGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}