{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { AlertService } from '@app/services/alert.service';\nimport { ApiService } from '@app/services/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/services/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@app/services/alert.service\";\nimport * as i4 from \"../../../navigation/layouts/layout-dashboard/layout-dashboard.component\";\nimport * as i5 from \"../../../navigation/components/dashboard-head/dashboard-head.component\";\nimport * as i6 from \"@angular/common\";\n\nfunction QueryAirportComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Airport ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QueryAirportComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Airport ID must be less than 5 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QueryAirportComponent_div_15_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Airport ID must be at least 2 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QueryAirportComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtemplate(1, QueryAirportComponent_div_15_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵtemplate(2, QueryAirportComponent_div_15_div_2_Template, 2, 0, \"div\", 42);\n    i0.ɵɵtemplate(3, QueryAirportComponent_div_15_div_3_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"airportInput\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"airportInput\"].errors[\"maxlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"airportInput\"].errors[\"minlength\"]);\n  }\n}\n\nfunction QueryAirportComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 43);\n  }\n}\n\nfunction QueryAirportComponent_h3_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 44);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.runwayConditions.temp.toFixed(1));\n  }\n}\n\nfunction QueryAirportComponent_h3_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate((ctx_r3.runwayConditions.pressureAltitude * 3.28084).toFixed(1));\n  }\n}\n\nfunction QueryAirportComponent_h3_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 46);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.runwayConditions.precipitation.toFixed(2));\n  }\n}\n\nfunction QueryAirportComponent_h3_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 47);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.runwayConditions.headWind.toFixed(2));\n  }\n}\n\nfunction QueryAirportComponent_h3_99_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate((ctx_r6.runwayConditions.runwayLength * 3.28084).toFixed(0));\n  }\n}\n\nfunction QueryAirportComponent_h3_110_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 49);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.runwayConditions.slope.toFixed(3));\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let QueryAirportComponent = /*#__PURE__*/(() => {\n  class QueryAirportComponent {\n    constructor(apiService, formBuilder, alertService) {\n      this.apiService = apiService;\n      this.formBuilder = formBuilder;\n      this.alertService = alertService;\n      this.submitted = false;\n      this.runwaysLoading = false; // Initialized for injection\n\n      this.runwayConditions = {\n        airportID: '',\n        temp: null,\n        pressureAltitude: null,\n        precipitation: null,\n        headWind: null,\n        runwayLength: null,\n        runwayType: null,\n        slope: null\n      };\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        airportInput: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(4)]]\n      });\n      this.runwayButtonNumber = 0;\n      const sideButton1 = document.getElementById('RunwaySideButton1');\n      sideButton1.addEventListener('click', e => {\n        this.runwaySideClick(sideButton1.getAttribute('id'));\n      });\n      sideButton1.disabled = true;\n      const sideButton2 = document.getElementById('RunwaySideButton2');\n      sideButton2.addEventListener('click', e => {\n        this.runwaySideClick(sideButton2.getAttribute('id'));\n      });\n      sideButton2.disabled = true; // Make query button disabled until runways have been queried\n\n      const queryButton = document.getElementById('QueryButton');\n      queryButton.disabled = true; // Event listener that removes errors when id input is clicked on\n\n      const idInput = document.getElementById('airportID');\n      idInput.addEventListener('click', e => {\n        this.submitted = false;\n      });\n    } // Form controls for ease of access\n\n\n    get f() {\n      return this.form.controls;\n    } // Queries airport info from backend\n\n\n    queryAirport() {\n      const runwayNumbers = document.getElementsByClassName('runway-button');\n      const sideNumbers = document.getElementsByClassName('side-button');\n      let runwayNumber, runwaySideNumber;\n\n      for (let i = 0; i < runwayNumbers.length; i++) {\n        if (runwayNumbers[i].getAttribute('class').includes('btn-dark')) {\n          runwayNumber = runwayNumbers[i];\n        }\n      }\n\n      for (let i = 0; i < sideNumbers.length; i++) {\n        if (sideNumbers[i].getAttribute('class').includes('btn-dark')) {\n          runwaySideNumber = sideNumbers[i];\n        }\n      }\n\n      const runwayReplace = runwayNumber.innerHTML.replace('/', '_'); // Call to backend for runway conditions\n\n      this.apiService.get(`airport/runway/${this.airportID}/${runwayReplace}/${runwaySideNumber.innerHTML}`).subscribe(res => {\n        if (res.data.runwayError) {\n          this.alertService.error(res.data.runwayError);\n          return;\n        }\n\n        this.runwayConditions = res.data.runwayCondition;\n      }, error => {\n        this.alertService.error('Airport conditions could not be queried.');\n      });\n    } // Find runways from FAA\n\n\n    findRunways() {\n      // Causes runways button to show loading symbol\n      this.runwaysLoading = true; // Triggers visual errors if form is invalid\n\n      this.submitted = true; // If form is invalid, function stops\n\n      if (this.form.invalid) {\n        this.runwaysLoading = false;\n        return;\n      }\n\n      const airportID = document.getElementById('airportID');\n      this.airportID = airportID.value;\n      const runwayButtonGroup = document.getElementById('runway-button-group');\n\n      while (runwayButtonGroup.firstChild) {\n        runwayButtonGroup.removeChild(runwayButtonGroup.lastChild);\n      } // Backend call to find runways at airport listed by faa\n\n\n      this.apiService.get(`airport/runways/${this.f.airportInput.value}`).subscribe(res => {\n        if (res.data.runwayError) {\n          this.alertService.error(res.data.runwayError);\n          return;\n        } // Adds buttons to group for each runway\n\n\n        if (res.data.airportRunways) {\n          res.data.airportRunways.forEach(x => {\n            const newButton = document.createElement('button');\n            newButton.setAttribute('class', 'btn-sm btn-outline-dark runway-button');\n            newButton.setAttribute('id', 'runwayButton' + this.runwayButtonNumber);\n            newButton.addEventListener('click', e => {\n              this.runwayClick(newButton.getAttribute('id'));\n            });\n            newButton.innerHTML = x.replace('_', '/'), x.replace('_', '/');\n            this.runwayButtonNumber++;\n            runwayButtonGroup.appendChild(newButton);\n          });\n        }\n\n        this.runwaysLoading = false;\n      }, error => {\n        this.alertService.error('Runways could not be found.');\n      });\n    } // Visually changes buttons when clicked\n\n\n    runwayClick(id) {\n      const button = document.getElementById(id);\n      const buttons = document.getElementsByClassName('runway-button');\n\n      for (let i = 0; i < buttons.length; i++) {\n        buttons[i].className = buttons[i].className.replace('active', '');\n        buttons[i].className = buttons[i].className.replace('btn-dark', 'btn-outline-dark');\n      }\n\n      button.className = button.className.replace('btn-outline-dark', 'btn-dark');\n      button.className += ' active';\n      const sideButton1 = document.getElementById('RunwaySideButton1');\n      sideButton1.disabled = false;\n      sideButton1.className = sideButton1.className.replace('btn-outline-dark', 'btn-dark');\n      const sideButton2 = document.getElementById('RunwaySideButton2');\n      sideButton2.disabled = false;\n      const sides = button.innerHTML.split('/');\n      sideButton1.innerHTML = sides[0];\n      sideButton2.innerHTML = sides[1];\n      const queryButton = document.getElementById('QueryButton');\n      queryButton.disabled = false;\n    } // Visually changes runway side buttons when clicked.\n\n\n    runwaySideClick(id) {\n      const button = document.getElementById(id);\n      const buttons = document.getElementsByClassName('side-button');\n\n      for (let i = 0; i < buttons.length; i++) {\n        buttons[i].className = buttons[i].className.replace('active', '');\n        buttons[i].className = buttons[i].className.replace('btn-dark', 'btn-outline-dark');\n      }\n\n      button.className = button.className.replace('btn-outline-dark', 'btn-dark');\n      button.className += ' active';\n    }\n\n  }\n\n  QueryAirportComponent.ɵfac = function QueryAirportComponent_Factory(t) {\n    return new (t || QueryAirportComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n\n  QueryAirportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QueryAirportComponent,\n    selectors: [[\"query-airport\"]],\n    decls: 113,\n    vars: 18,\n    consts: [[\"title\", \"Runway Query\", 3, \"hideBreadcrumbs\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"mt-5\"], [1, \"col-lg-5\", \"text-center\", \"p-1\", \"ml-5\"], [1, \"card\", \"text-center\"], [1, \"card-header\", \"bg-dark\", \"text-center\"], [1, \"card-body\", \"border\", \"border-dark\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"text-center\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", 3, \"formGroup\"], [\"for\", \"airportInput\"], [\"type\", \"text\", \"formControlName\", \"airportInput\", \"id\", \"airportID\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"justify-content-center\", 3, \"formGroup\"], [\"type\", \"submit\", \"id\", \"FindRunwaysButton\", 1, \"btn\", \"btn-outline-dark\", \"active\", \"text-center\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [1, \"col-md-7\"], [\"id\", \"runway-button-group\", 1, \"card\", \"border-1\", \"mb-4\"], [1, \"col-md-5\"], [\"for\", \"RunwaySideButton1\"], [1, \"blank-card\", \"mt-2\"], [\"type\", \"button\", \"id\", \"RunwaySideButton1\", 1, \"btn\", \"btn-outline-dark\", \"text-center\", \"side-button\"], [\"type\", \"button\", \"id\", \"RunwaySideButton2\", 1, \"btn\", \"btn-outline-dark\", \"text-center\", \"side-button\"], [\"type\", \"button\", \"id\", \"QueryButton\", 1, \"btn\", \"btn-outline-dark\", \"active\", \"text-center\", 3, \"click\"], [1, \"col-lg-5\"], [\"id\", \"airportID-output\"], [\"id\", \"IDContainer\", 1, \"w-100\", \"shadow-lg\", \"text-center\", \"bg-dark\", \"airport-output\", \"rounded\", \"p-2\"], [1, \"output-label\"], [1, \"col-lg-4\"], [1, \"shadow-lg\", \"airport-output\", \"text-center\", \"bg-dark\", \"rounded\", \"p-3\"], [1, \"output-label\", \"p-0\", \"m-0\"], [1, \"shadow-lg\", \"airport-output\", \"text-center\", \"bg-white\", \"rounded\", \"p-3\"], [\"id\", \"temp-output\", \"class\", \"m-0 p-0\", 4, \"ngIf\"], [1, \"m-0\", \"p-0\"], [\"id\", \"pressure-altitude-output\", \"class\", \"m-0 p-0\", 4, \"ngIf\"], [\"id\", \"precipitation-output\", \"class\", \"m-0 p-0\", 4, \"ngIf\"], [\"id\", \"headwind-output\", \"class\", \"m-0 p-0\", 4, \"ngIf\"], [\"id\", \"runway-length-output\", \"class\", \"m-0 p-0\", 4, \"ngIf\"], [1, \"shadow-lg\", \"airport-output\", \"text-center\", \"bg-white\", \"rounded\", \"p-3\", \"m-0\"], [\"id\", \"runway-type-output\", 1, \"m-0\", \"p-0\"], [1, \"shadow-lg\", \"airport-output\", \"text-center\", \"bg-white\", \"rounded\", \"p-3\", \"h-100\"], [\"id\", \"slope-output\", \"class\", \"p-0 m-0\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"], [\"id\", \"temp-output\", 1, \"m-0\", \"p-0\"], [\"id\", \"pressure-altitude-output\", 1, \"m-0\", \"p-0\"], [\"id\", \"precipitation-output\", 1, \"m-0\", \"p-0\"], [\"id\", \"headwind-output\", 1, \"m-0\", \"p-0\"], [\"id\", \"runway-length-output\", 1, \"m-0\", \"p-0\"], [\"id\", \"slope-output\", 1, \"p-0\", \"m-0\"]],\n    template: function QueryAirportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"layout-dashboard\");\n        i0.ɵɵelement(1, \"sb-dashboard-head\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n        i0.ɵɵtext(6, \" Input Runway Info \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function QueryAirportComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.findRunways();\n        });\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Enter Airport ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, QueryAirportComponent_div_15_Template, 4, 3, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n        i0.ɵɵtemplate(18, QueryAirportComponent_span_18_Template, 1, 0, \"span\", 14);\n        i0.ɵɵtext(19, \" Find Runways \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 6)(21, \"div\", 15)(22, \"label\");\n        i0.ɵɵtext(23, \"Select Takeoff Runway:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 17)(26, \"label\", 18);\n        i0.ɵɵtext(27, \"Select Runway Starting Side: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 19)(29, \"button\", 20);\n        i0.ɵɵtext(30, \"Side 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 21);\n        i0.ɵɵtext(32, \"Side 2\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(33, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function QueryAirportComponent_Template_button_click_33_listener() {\n          return ctx.queryAirport();\n        });\n        i0.ɵɵtext(34, \"Query\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(35, \"div\", 23)(36, \"div\", 6)(37, \"div\", 24)(38, \"div\", 25)(39, \"h2\", 26);\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(41, \"div\", 6)(42, \"div\", 27)(43, \"div\", 6)(44, \"div\", 28)(45, \"h3\", 29);\n        i0.ɵɵtext(46, \"Temperature\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(47, \"div\", 6)(48, \"div\", 28)(49, \"h3\", 29);\n        i0.ɵɵtext(50, \"Pressure Altitude\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(51, \"div\", 6)(52, \"div\", 28)(53, \"h3\", 29);\n        i0.ɵɵtext(54, \"Precipitation\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(55, \"div\", 6)(56, \"div\", 28)(57, \"h3\", 29);\n        i0.ɵɵtext(58, \"Head Wind\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(59, \"div\", 6)(60, \"div\", 28)(61, \"h3\", 29);\n        i0.ɵɵtext(62, \"Runway Length\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(63, \"div\", 6)(64, \"div\", 28)(65, \"h3\", 29);\n        i0.ɵɵtext(66, \"Runway Type\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(67, \"div\", 6)(68, \"div\", 28)(69, \"h3\", 29);\n        i0.ɵɵtext(70, \"Slope\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(71, \"div\", 27)(72, \"div\", 6)(73, \"div\", 30)(74, \"div\", 6);\n        i0.ɵɵtemplate(75, QueryAirportComponent_h3_75_Template, 2, 1, \"h3\", 31);\n        i0.ɵɵelementStart(76, \"h3\", 32);\n        i0.ɵɵtext(77, \"\\u00A0\\u00B0C\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(78, \"div\", 6)(79, \"div\", 30)(80, \"div\", 6);\n        i0.ɵɵtemplate(81, QueryAirportComponent_h3_81_Template, 2, 1, \"h3\", 33);\n        i0.ɵɵelementStart(82, \"h3\", 32);\n        i0.ɵɵtext(83, \"\\u00A0ft\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(84, \"div\", 6)(85, \"div\", 30)(86, \"div\", 6);\n        i0.ɵɵtemplate(87, QueryAirportComponent_h3_87_Template, 2, 1, \"h3\", 34);\n        i0.ɵɵelementStart(88, \"h3\", 32);\n        i0.ɵɵtext(89, \"\\u00A0in\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(90, \"div\", 6)(91, \"div\", 30)(92, \"div\", 6);\n        i0.ɵɵtemplate(93, QueryAirportComponent_h3_93_Template, 2, 1, \"h3\", 35);\n        i0.ɵɵelementStart(94, \"h3\", 32);\n        i0.ɵɵtext(95, \"\\u00A0kts\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(96, \"div\", 6)(97, \"div\", 30)(98, \"div\", 6);\n        i0.ɵɵtemplate(99, QueryAirportComponent_h3_99_Template, 2, 1, \"h3\", 36);\n        i0.ɵɵelementStart(100, \"h3\", 32);\n        i0.ɵɵtext(101, \"\\u00A0ft\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(102, \"div\", 6)(103, \"div\", 37)(104, \"div\", 6)(105, \"h3\", 38);\n        i0.ɵɵtext(106);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(107, \"div\", 6)(108, \"div\", 39)(109, \"div\", 6);\n        i0.ɵɵtemplate(110, QueryAirportComponent_h3_110_Template, 2, 1, \"h3\", 40);\n        i0.ɵɵelementStart(111, \"h3\", 32);\n        i0.ɵɵtext(112, \"\\u00B0\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hideBreadcrumbs\", true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.submitted && ctx.f[\"airportInput\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"airportInput\"].errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.runwaysLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.runwaysLoading);\n        i0.ɵɵadvance(22);\n        i0.ɵɵtextInterpolate1(\"Airport ID: \", ctx.runwayConditions.airportID.toUpperCase(), \"\");\n        i0.ɵɵadvance(35);\n        i0.ɵɵproperty(\"ngIf\", ctx.runwayConditions.temp !== null);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.runwayConditions.pressureAltitude !== null);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.runwayConditions.precipitation !== null);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.runwayConditions.headWind !== null);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.runwayConditions.runwayLength !== null);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", ctx.runwayConditions.runwayType, \"\\u00A0\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.runwayConditions.runwayLength !== null);\n      }\n    },\n    directives: [i4.LayoutDashboardComponent, i5.DashboardHeadComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i6.NgClass, i6.NgIf],\n    styles: [\"#FindRunwaysButton[_ngcontent-%COMP%]{margin:4%}.shadow-lg[_ngcontent-%COMP%]{width:100%;display:table}h4[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{vertical-align:middle;display:table-cell}.output-label[_ngcontent-%COMP%]{color:#fff}#runway-button-group[_ngcontent-%COMP%]{min-height:100px;border:black solid 1px}#airportID-output[_ngcontent-%COMP%]{width:66.7%}form[_ngcontent-%COMP%], input[_ngcontent-%COMP%]{width:35%;display:table-cell}input[_ngcontent-%COMP%]{border:black solid 1px}.card-header[_ngcontent-%COMP%]{color:#fff}#IDContainer[_ngcontent-%COMP%]{margin-top:1%}#QueryButton[_ngcontent-%COMP%]{margin-bottom:3%;margin-top:5%}.airport-output[_ngcontent-%COMP%]{width:100%;display:table}.airport-output-white[_ngcontent-%COMP%]{width:65%;display:table}.airport-output-unit[_ngcontent-%COMP%]{width:30%;display:table;padding-top:1%}.airport-output-unit-sm[_ngcontent-%COMP%]{width:33.5%;padding-left:10%;height:2%}\"]\n  });\n  return QueryAirportComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}