{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { sideNavItems, sideNavSections } from '@modules/navigation/data';\nimport { NavigationService } from '@modules/navigation/services';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@modules/navigation/services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../containers/top-nav/top-nav.component\";\nimport * as i4 from \"../../containers/side-nav/side-nav.component\";\nimport * as i5 from \"../../../../app/alerts/alert.component\";\nimport * as i6 from \"../../containers/footer/footer.component\";\n\nconst _c0 = function (a0) {\n  return {\n    \"sb-nav-fixed\": a0\n  };\n};\n\nconst _c1 = [\"*\"];\nexport let LayoutDashboardComponent = /*#__PURE__*/(() => {\n  class LayoutDashboardComponent {\n    constructor(navigationService, changeDetectorRef) {\n      this.navigationService = navigationService;\n      this.changeDetectorRef = changeDetectorRef;\n      this.sideNavHidden = false;\n      this.subscription = new Subscription();\n      this.sideNavItems = sideNavItems;\n      this.sideNavSections = sideNavSections;\n      this.sidenavStyle = 'sb-sidenav-dark';\n    }\n\n    ngOnInit() {\n      this.subscription.add(this.navigationService.sideNavVisible$().subscribe(isVisible => {\n        this.sideNavHidden = !isVisible;\n        this.changeDetectorRef.markForCheck();\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n  }\n\n  LayoutDashboardComponent.ɵfac = function LayoutDashboardComponent_Factory(t) {\n    return new (t || LayoutDashboardComponent)(i0.ɵɵdirectiveInject(i1.NavigationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  LayoutDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LayoutDashboardComponent,\n    selectors: [[\"layout-dashboard\"]],\n    hostVars: 2,\n    hostBindings: function LayoutDashboardComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"sb-sidenav-toggled\", ctx.sideNavHidden);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 11,\n    vars: 6,\n    consts: [[3, \"ngClass\"], [\"id\", \"layoutSidenav\"], [\"id\", \"layoutSidenav_nav\"], [3, \"sidenavStyle\", \"sideNavItems\", \"sideNavSections\"], [\"id\", \"layoutSidenav_content\"], [1, \"container-fluid\"]],\n    template: function LayoutDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵelement(1, \"sb-top-nav\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵelement(4, \"sb-side-nav\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"main\");\n        i0.ɵɵelement(7, \"alert\");\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵprojection(9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"main-footer\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, !ctx.static));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"sidenavStyle\", ctx.sidenavStyle)(\"sideNavItems\", ctx.sideNavItems)(\"sideNavSections\", ctx.sideNavSections);\n      }\n    },\n    directives: [i2.NgClass, i3.TopNavComponent, i4.SideNavComponent, i5.AlertComponent, i6.FooterComponent],\n    styles: [\"\"]\n  });\n  return LayoutDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}